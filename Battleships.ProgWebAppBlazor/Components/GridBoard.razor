@using System.Drawing;

@if (Visible)
{ 
    <table class="table table-bordered @AdditionalTableClasses">
        <thead>
            <tr class="row">
                <th class=@colStyle></th>
                <th class=@colStyle>A</th>
                <th class=@colStyle>B</th>
                <th class=@colStyle>C</th>
                <th class=@colStyle>D</th>
                <th class=@colStyle>E</th>
                <th class=@colStyle>F</th>
                <th class=@colStyle>G</th>
                <th class=@colStyle>H</th>
                <th class=@colStyle>I</th>
                <th class=@colStyle>J</th>
            </tr>
        </thead>
        <tbody>
            @for (int y = 0; y < 10; y++)
            {
                <tr class="row">
                    <th class=@colStyle>@y</th>
                    @for (int x = 0; x < 10; x++)
                    {
                        var p = new Point(x, y);
                        <GridCell Coord=@p State=@GetState(p) AllowSelection=@IsComputer OnCellClicked=@CellClicked />
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public GridState GridState { get; set; }

    [Parameter]
    public bool IsComputer { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public Action<Point> OnCellClicked { get; set; }

    private const string colStyle = "col px-0 py-0 py-md-2";

    private string AdditionalTableClasses => IsComputer ? "ms-md-2" : "";

    private CellState GetState(Point point)
    {
        return GridState.Grid[point];
    }

    private void CellClicked(Point coord)
    {
        if (!IsComputer)
            return;

        OnCellClicked(coord);
    }
}
