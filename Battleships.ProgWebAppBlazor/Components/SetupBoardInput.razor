@using Battleships.GameEngine
@using System.Drawing

@if (!IsCompleted)
{
    <div class="row">
        <div class="col-md-6">
            <p>Enter your five ships (1 x 5 length, 1 x 4 length, 2 x 3 length and 1 x 2 length) in the format 'start end', e.g. 'A0 A5'.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">            
            <EditForm Model=@SetupShips OnValidSubmit=@ValidFormSubmitted>
                <DataAnnotationsValidator />
                <div class="row mb-3">
                    <div class="col">
                        <label for="ShipOne">Ship One</label>
                        <InputText @bind-Value=SetupShips.ShipOne class="form-control" id="ShipOne" @onblur=InputBlur @oninput=InputTyped />
                        <ValidationMessage For="() => SetupShips.ShipOne" />
                    </div>
                    <div class="col">
                        <label for="ShipTwo">Ship Two</label>
                        <InputText @bind-Value=SetupShips.ShipTwo class="form-control" id="ShipTwo" @onblur=InputBlur @oninput=InputTyped />
                        <ValidationMessage For="() => SetupShips.ShipTwo" />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col">
                        <label for="ShipThree">Ship Three</label>
                        <InputText @bind-Value=SetupShips.ShipThree class="form-control" id="ShipThree" @onblur=InputBlur @oninput=InputTyped />
                        <ValidationMessage For="() => SetupShips.ShipThree" />
                    </div>
                    <div class="col">
                        <label for="ShipFour">Ship Four</label>
                        <InputText @bind-Value=SetupShips.ShipFour class="form-control" id="ShipFour" @onblur=InputBlur @oninput=InputTyped />
                        <ValidationMessage For="() => SetupShips.ShipFour" />
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-6">
                        <label for="ShipFive">Ship Five</label>
                        <InputText @bind-Value=SetupShips.ShipFive class="form-control" id="ShipFive" @onblur=InputBlur @oninput=InputTyped />
                        <ValidationMessage For="() => SetupShips.ShipFive" />
                    </div>
                </div>
                <input type="submit" class="btn btn-primary" value="Start Game" />
            </EditForm>
        </div>
    </div>
}

@code {

    [Parameter]
    public GridState GridState { get; set; }

    [Parameter]
    public SetupBoard SetupBoard { get; set; }

    [Parameter]
    public Action<bool> OnShipsChanged { get; set; }

    private SetupShips SetupShips = new SetupShips();

    private bool IsCompleted;

    private void InputBlur(FocusEventArgs args) => DisplayShips();

    private void InputTyped(ChangeEventArgs args)
    {
        var v = (string)args.Value;
        if (v.Length == 5 || v.Length == 0)
            DisplayShips();
    }

    private void DisplayShips(bool isCompleted = false)
    {
        SetupBoard.Reset();
        GridState.Clear();

        foreach (var ship in SetupShips.GetValidStructuralShips())
        {
            GridState.DrawShip(ship.ship);
            if (isCompleted)
                SetupBoard.AddShip(ship.ship);
        }

        OnShipsChanged?.Invoke(isCompleted);
    }

    void ValidFormSubmitted(EditContext editContext)
    {
        IsCompleted = true;
        DisplayShips(true);
    }

    public void UseCoordinate(Point point)
    {
        SetupShips.UseCoord(new GridSquare(point));
        DisplayShips();
    }
}
